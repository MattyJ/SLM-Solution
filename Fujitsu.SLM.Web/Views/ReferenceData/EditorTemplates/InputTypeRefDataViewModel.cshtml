@model InputTypeRefDataViewModel
@{
    var isAdministrator = User.IsInRole(UserRoles.Administrator);
}
<div>
    <fieldset class="form-popup-fieldset">
        @Html.HiddenFor(x => x.Id)
        <legend>Input Type</legend>
        <div class="layout-row">
            <div class="editor-label">
                <label>@Html.LabelFor(x => x.InputTypeNumber)</label>
            </div>
            <div class="editor-field">
                @(Html.EditorFor(x => x.InputTypeNumber, "SmallInteger"))
                <div class="kendo-validation">
                    @Html.ValidationMessageFor(model => model.InputTypeNumber)
                </div>
            </div>
        </div>
        <div class="layout-row">
            <div class="editor-label">
                <label>@Html.LabelFor(x => x.InputTypeName)</label>
            </div>
            <div class="editor-field">
                @(Html.EditorFor(x => x.InputTypeName, "WindowWideText"))
                <div class="kendo-validation">
                    @Html.ValidationMessageFor(model => model.InputTypeName)
                </div>
            </div>
        </div>
        @if (isAdministrator)
        {
            <div class="layout-row">
                <div class="editor-label">
                    <label>@Html.LabelFor(x => x.Default)</label>
                </div>
                <div class="editor-field">
                    @(Html.Kendo().CheckBox().Name("Default"))
                </div>
            </div>
        }
        <div class="layout-row">
            <div class="editor-label">
                <label>@Html.LabelFor(x => x.SortOrder)</label>
            </div>
            <div class="editor-field">
                @(Html.EditorFor(x => x.SortOrder, "SmallInteger"))
                <div class="kendo-validation">
                    @Html.ValidationMessageFor(model => model.SortOrder)
                </div>
            </div>
        </div>
    </fieldset>
</div>

@Html.Partial("_KendoValidation")