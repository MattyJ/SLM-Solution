@{
    ViewBag.Title = "Function Types";
    var isAdministrator = User.IsInRole(UserRoles.Administrator);
}

@section navigation
{
    @Html.Partial("_ReferenceDataMenu", new ReferenceDataMenuModel { FunctionsSelected = true })
}

@section globalcommands
{
    @Html.Action("QuickLinks", "Menu")
}

@section helpcommands
{
    @Html.ImageActionLink(Url.Content("~/Images/Help.png"), "Help", "Index", "Help", tooltip: "Help", htmlAttributes: new { id = "btnContextHelp", target = "servicedecompositionhelp" }, routeValues: new { helpKey = "functionsrefdata" })
}

@section contextcommands
{

}

<h2>@ViewBag.Title</h2>
@(Html.Kendo().Grid<FunctionTypeRefDataViewModel>()
    .Name("FunctionTypeRefDataGrid")
    .Columns(columns =>
    {
        columns.Bound(c => c.Id).Visible(false);
        columns.Bound(c => c.FunctionName).Width(150);
        columns.Bound(o => o.Visible).Width(50).ClientTemplate("#= Visible? 'Yes' : 'No' #");
        columns.Bound(c => c.SortOrder).Width(50);
        columns.Bound(c => c.UsageCount).Width(100);
        columns.Bound(c => c.CanEdit).Visible(false);
        columns.Bound(c => c.CanDelete).Visible(false);
        columns.Command(cmd =>
        {
            cmd.Edit();
            cmd.Destroy();
        }).Width(100).Title("");
    })
        .ToolBar(toolbar =>
        {
            if (isAdministrator)
            {
                toolbar.Create().Text("Add Function Type");
            }
        })
    .Pageable(pageable =>
    {
        pageable.Enabled(true);
        pageable.PageSizes(new[] { 5, 10, 15, 20, 25, 50 });
    })
    .Filterable(filterable => filterable.Extra(false).Operators(operators => operators.ForString(str => str.Clear().Contains("Contains").DoesNotContain("Does not contain").StartsWith("Starts with").EndsWith("Ends with").IsEqualTo("Is equal to").IsNotEqualTo("Is not equal to"))))
    .Sortable()
    .ColumnMenu()
    .DataSource(dataSource => dataSource
                                    .Ajax()
                                    .PageSize(15)
                                    .Model(model =>
                                    {
                                        model.Id(p => p.Id);
                                        model.Field(f => f.Visible).DefaultValue(true);
                                        model.Field(f => f.SortOrder).DefaultValue(5);
                                    })
                                    .Events(events => events.Error("onErrorFunctionTypes").Sync("syncHandler"))
                                    .Read(read => read.Action("ReadAjaxFunctionRefDataGrid", "ReferenceData"))
                                    .Create(create => create.Action("CreateAjaxFunctionRefDataGrid", "ReferenceData"))
                                    .Update(update => update.Action("UpdateAjaxFunctionRefDataGrid", "ReferenceData"))
                                    .Destroy(destroy => destroy.Action("DeleteAjaxFunctionRefDataGrid", "ReferenceData"))
                                    .Sort(sort =>
                                    {
                                        sort.Add(col => col.SortOrder);
                                        sort.Add(col => col.FunctionName);
                                    }))
    .Events(e =>
    {
        e.Edit("onEdit");
        e.DataBound("hideButtons");
    })
    .Editable(edt => edt.Mode(GridEditMode.PopUp).DisplayDeleteConfirmation("Are you sure you want to delete this Function Type?")
    .Window(w => w.Title("Function").Width(600)))
)

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script type="text/javascript">
    $(document).ready(function () {
        $("#FunctionTypeRefDataGrid .k-grid-add").on("click", function (e) {
            isCreating = true;
        });

        popupGridEditorButtonNamingOnInsert("#FunctionTypeRefDataGrid");

        $("#btnBack").hide();
    });

    function onErrorFunctionTypes(e) {
        onErrorCancelWithGridId(e, "#FunctionTypeRefDataGrid");
    }

    function hideButtons() {
        // Remove all delete buttons
        $("#FunctionTypeRefDataGrid tbody tr .k-grid-delete").each(function () {
            var currentDataItem = $("#FunctionTypeRefDataGrid").data("kendoGrid").dataItem($(this).closest("tr"));
            if (currentDataItem.CanDelete == false) {
                $(this).remove();
            }
        });

        // Remove relevant edit buttons
        $("#FunctionTypeRefDataGrid tbody tr .k-grid-edit").each(function () {
            var currentDataItem = $("#FunctionTypeRefDataGrid").data("kendoGrid").dataItem($(this).closest("tr"));
            if (currentDataItem.CanEdit == false) {
                $(this).remove();
            }
        });
    }
</script>