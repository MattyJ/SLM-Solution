@model ChangePasswordViewModel
@{
    ViewBag.Title = "Change Password";
}

@section navigation
{
    @Html.Action("HomeMenu", "Menu")
}

@section globalcommands
{
    @Html.Action("QuickLinks", "Menu")
}

@section contextcommands
{

}

@section helpcommands
{
    @Html.ImageActionLink(Url.Content("~/Images/Help.png"), "Help", "Index", "Help", tooltip: "Help", htmlAttributes: new { id = "btnContextHelp", target = "servicedecompositionhelp" }, routeValues: new { helpKey = "changepassword" })
}

<h2>@ViewBag.Title</h2>

@using (Html.BeginForm("ChangePassword", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    <hr />
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    <div class="layout-row">
        <div class="editor-label">
            <label>@Html.LabelFor(x => x.OldPassword)</label>
        </div>
        <div class="editor-field">
            @(Html.EditorFor(x => x.OldPassword))
            @Html.ValidationMessageFor(m => m.OldPassword)
        </div>
    </div>
    <div class="layout-row">
        <div class="editor-label">
            <label>@Html.LabelFor(x => x.NewPassword)</label>
        </div>
        <div class="editor-field">
            @(Html.EditorFor(x => x.NewPassword))
            @Html.ValidationMessageFor(m => m.NewPassword)
        </div>
    </div>
    <div class="layout-row">
        <div class="editor-label">
            <label>@Html.LabelFor(x => x.ConfirmPassword)</label>
        </div>
        <div class="editor-field">
            @(Html.EditorFor(x => x.ConfirmPassword))
            @Html.ValidationMessageFor(m => m.ConfirmPassword)
        </div>
    </div>
    <fieldset>
        <p>
            <input type="submit" name="action" class="k-button k-button-icontext slm-button" value="Change" />
        </p>
    </fieldset>
}